
import { z } from 'zod';

// Schemas and types for enhance-prompt.ts
export const EnhancePromptInputSchema = z.object({
  originalPrompt: z.string().describe('The original prompt provided by the user.'),
});
export type EnhancePromptInput = z.infer<typeof EnhancePromptInputSchema>;

export const PromptAnalysisSchema = z.object({
  primaryCategory: z.string().describe('The main domain of the prompt.'),
  secondaryCategories: z.array(z.string()).optional().describe('Other applicable domains, if any. If none, this can be omitted or an empty array.'),
  intentRecognition: z.string().describe("The user's likely goal."),
  enhancementOpportunities: z.string().describe('Concise list of improvements needed, potentially as a newline-separated string or bullet points.'),
});

export const EnhancePromptOutputSchema = z.object({
  originalPrompt: z.string().describe("User's original prompt."),
  promptAnalysis: PromptAnalysisSchema.describe('Analysis of the prompt, including category, intent, and opportunities.'),
  enhancedPrompt: z.string().describe('The completely rewritten, enhanced prompt ready for immediate use. This section must contain only plain text with no formatting markers.'),
  enhancementExplanation: z.string().describe('Brief explanation of key improvements made and why they will produce superior results.'),
});
export type EnhancePromptOutput = z.infer<typeof EnhancePromptOutputSchema>;


// Schemas and types for modify-result.ts
export const ModifyResultInputSchema = z.object({
  originalPrompt: z.string().describe('The original prompt entered by the user.'),
  enhancedPrompt: z.string().describe('The enhanced prompt generated by the AI.'),
  modificationRequest: z
    .string()
    .describe('The specific modification requested by the user.'),
});
export type ModifyResultInput = z.infer<typeof ModifyResultInputSchema>;

export const ModifyResultOutputSchema = z.object({
  modifiedPrompt: z.string().describe('The further refined prompt based on the modification request.'),
});
export type ModifyResultOutput = z.infer<typeof ModifyResultOutputSchema>;
