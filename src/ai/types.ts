
import { z } from 'zod';

// Schemas and types for enhance-prompt.ts
export const EnhancePromptInputSchema = z.object({
  originalPrompt: z.string().describe('The original prompt provided by the user.'),
});
export type EnhancePromptInput = z.infer<typeof EnhancePromptInputSchema>;

export const PromptAnalysisSchema = z.object({
  primaryCategory: z.string().default("General").describe('The main domain of the prompt.'),
  secondaryCategories: z.array(z.string()).optional().default([]).describe('Other applicable domains, if any.'),
  intentRecognition: z.string().default("Not specified by AI").describe("The user's likely goal."),
  enhancementOpportunities: z.string().default("No specific opportunities listed by AI.").describe('Concise list of improvements or the raw analysis text if not further parsable.'),
});
export type PromptAnalysis = z.infer<typeof PromptAnalysisSchema>;


export const EnhancePromptOutputSchema = z.object({
  originalPrompt: z.string().describe("The user's original prompt that was submitted for enhancement."),
  promptAnalysis: PromptAnalysisSchema.default({}).describe('Analysis of the prompt.'),
  enhancedPrompt: z.string().describe('The rewritten, enhanced prompt. If parsing fails, this might be the raw AI output or an error message.'),
  enhancementExplanation: z.string().default("No explanation provided by AI or parsing failed.").describe('Explanation of improvements or parsing status.'),
});
export type EnhancePromptOutput = z.infer<typeof EnhancePromptOutputSchema>;


// Schemas and types for modify-result.ts
export const ModifyResultInputSchema = z.object({
  originalPrompt: z.string().describe('The original prompt entered by the user.'),
  enhancedPrompt: z.string().describe('The enhanced prompt generated by the AI.'),
  modificationRequest: z
    .string()
    .describe('The specific modification requested by the user.'),
});
export type ModifyResultInput = z.infer<typeof ModifyResultInputSchema>;

export const ModifyResultOutputSchema = z.object({
  modifiedPrompt: z.string().describe('The further refined prompt based on the modification request.'),
});
export type ModifyResultOutput = z.infer<typeof ModifyResultOutputSchema>;

